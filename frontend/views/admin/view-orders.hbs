<section>
    <div class="">
        <div class="flex justify-between pb-3">
            <h2 class="text-xl md:text-2xl font-semibold">Orders</h2>
        </div>
        <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
            <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
                <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                    <tr>
                        <th scope="col" class="px-6 py-3">
                            No
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Order ID
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Date
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Customer Name
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Address
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Pincode
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Mobile
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Amount
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Payment Method
                        </th>
                        {{!-- <th scope="col" class="px-6 py-3">
                            Payment Status
                        </th> --}}
                        <th scope="col" class="px-6 py-3">
                            Order Status
                        </th>
                        <th scope="col" class="px-6 py-3">
                            View Details
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                    {{#each orders}}
                    <tr
                        class="odd:bg-white odd:dark:bg-gray-900 even:bg-gray-50 even:dark:bg-gray-800 border-b dark:border-gray-700">
                        <td class="px-6 py-4">
                            {{addOne @index}}
                        </td>
                        <td class="px-6 py-4 font-mono text-sm">
                            #{{this._id}}
                        </td>
                        <td class="px-6 py-4">
                            {{formatDate this.date}}
                        </td>
                        <td class="px-6 py-4">
                            {{this.userName}}
                        </td>
                        <td class="px-6 py-4">
                            {{this.deliveryDetails.address}}
                        </td>
                        <td class="px-6 py-4">
                            {{this.deliveryDetails.pincode}}
                        </td>
                        <td class="px-6 py-4">
                            {{this.deliveryDetails.mobile}}
                        </td>
                        <td class="px-6 py-4 font-medium">
                            â‚¹{{this.totalAmount}}
                        </td>
                        <td class="px-6 py-4">
                            <span class="{{paymentMethodClass this.paymentMethod}} px-2 py-1 rounded-full text-xs">
                                {{this.paymentMethod}}
                            </span>
                        </td>
                        {{!-- <td class="px-6 py-4">
                            <span
                                class="{{#if (eq this.paymentStatus 'Paid')}}bg-green-100 text-green-800{{else}}bg-red-100 text-red-800{{/if}} px-2 py-1 rounded-full text-xs">
                                {{this.paymentStatus}}
                            </span>
                        </td> --}}
                        <td class="px-6 py-4">
                            <span class="{{getStatusColor this.status}} px-2 py-1 rounded-full text-xs">
                                {{this.status}}
                            </span>
                        </td>
                        <td class="px-6 py-4">
                            <a href="/admin/order-details/{{this._id}}"
                                class="font-medium text-blue-600 dark:text-blue-500 hover:underline">
                                View
                            </a>
                        </td>
                        <td class="px-6 py-4">
                            <div class="relative inline-block" x-data="{ isOpen: false }">
                                <!-- Dropdown toggle button -->
                                <button @click="isOpen = !isOpen" @click.outside="isOpen = false"
                                    class="text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-3 py-1.5 text-center inline-flex items-center"
                                    type="button">
                                    Actions
                                    <svg class="w-2.5 h-2.5 ms-2.5" aria-hidden="true"
                                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                            stroke-width="2" d="m1 1 4 4 4-4" />
                                    </svg>
                                </button>

                                <!-- Dropdown menu -->
                                <div x-show="isOpen" x-transition:enter="transition ease-out duration-100"
                                    x-transition:enter-start="transform opacity-0 scale-95"
                                    x-transition:enter-end="transform opacity-100 scale-100"
                                    x-transition:leave="transition ease-in duration-75"
                                    x-transition:leave-start="transform opacity-100 scale-100"
                                    x-transition:leave-end="transform opacity-0 scale-95"
                                    class="z-50 absolute right-0 mt-2 w-44 origin-top-right bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none rounded-lg divide-y divide-gray-100 dark:bg-gray-700 dark:divide-gray-600">
                                    <ul class="py-1 text-sm text-gray-700 dark:text-gray-200">
                                        <li>
                                            <a href="#"
                                                @click.prevent="isOpen = false; updateOrderStatus('{{this._id}}', 'Processing')"
                                                class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Mark
                                                as Processing</a>
                                        </li>
                                        <li>
                                            <a href="#"
                                                @click.prevent="isOpen = false; updateOrderStatus('{{this._id}}', 'Placed')"
                                                class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Mark
                                                as Placed</a>
                                        </li>
                                        <li>
                                            <a href="#"
                                                @click.prevent="isOpen = false; updateOrderStatus('{{this._id}}', 'Shipped')"
                                                class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Mark
                                                as Shipped</a>
                                        </li>
                                        <li>
                                            <a href="#"
                                                @click.prevent="isOpen = false; updateOrderStatus('{{this._id}}', 'Delivered')"
                                                class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Mark
                                                as Delivered</a>
                                        </li>
                                        <li>
                                            <a href="#"
                                                @click.prevent="isOpen = false; updateOrderStatus('{{this._id}}', 'Cancelled')"
                                                class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white text-red-600">Cancel
                                                Order</a>
                                        </li>
                                </div>
                            </div>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </div>
</section>

<script>


</script>

{{!--
<script>
    // Helper function to get color based on status
    function getStatusColor(status) {
        switch (status) {
            case 'Processing': return 'bg-blue-100 text-blue-800';
            case 'Shipped': return 'bg-purple-100 text-purple-800';
            case 'Delivered': return 'bg-green-100 text-green-800';
            case 'Cancelled': return 'bg-red-100 text-red-800';
            case 'Pending': return 'bg-yellow-100 text-yellow-800';
            default: return 'bg-gray-100 text-gray-800';
        }
    }

    // Function to update order status
    function updateOrderStatus(orderId, status) {
        if (confirm(`Are you sure you want to mark this order as ${status}?`)) {
            fetch(`/admin/update-order-status`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderId, status })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('Error updating status');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error updating status');
                });
        }
    }
</script> --}}